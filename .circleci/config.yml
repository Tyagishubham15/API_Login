# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  test:
    docker:
      # Specify the version you desire here
      - image: circleci/php:8.1.5
  
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      # - image: redis:3
      - image: circleci/mysql:8.0.20-ram
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_USER: 
          MYSQL_DATABASE: 
          MYSQL_ROOT_PASSWORD: 
          MYSQL_PASSWORD: 

    steps:
      - checkout
      - run:
          name: Install MySQL driver
          command: |
            sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd
            sudo docker-php-ext-install zip bcmath pdo_mysql
      - run:
          name: 
          command: |
           
      # Download and cache dependencies

      # composer cache
      - restore_cache:
          keys:
          # "composer.json" can be used if "composer.json"
          # is not committed to the repository.
         
          # fallback to using the latest cache if no exact match is found
          
      - run:
      - save_cache:
          key: 
          paths:
            - vendor

      # node cache
      - restore_cache:
          keys:
            - 
            - 
      - run: 
      - save_cache:
          key: 
          paths:
            - 
            - 

      # prepare the database
      - run: 
      - run: php artisan migrate --env=testing --database=mysql --

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
      # this example uses codecept but you're not limited to it
      - run: 
      - run: 
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output

workflows:
  version: 2
  workflow:
    jobs:
    - test